name: Using Poetry Publisher

on:
    workflow_dispatch:
        inputs:
            app_version:
                description: 'Version to publish'
                default: ''
                required: false
            poetry_version_bump:
                description: 'Options for poetry version command'
                default: 'patch'
                required: false
            python-version:
                description: 'Python version to use'
                default: '3.11'
                required: false
            poetry_build_params:
                description: 'Parameters for poetry build command'
                default: ''
                required: false
            pytest_run:
                description: 'Run tests with pytest'
                default: false
                type: boolean
            pytest_params:
                description: 'Parameters for pytest'
                default: ''

jobs:
    publish:
        runs-on: ubuntu-latest
        steps:
            - name: Debug variables
              run: |
                  echo version = ${{ inputs.app_version }}
                  echo poetry_version_options = ${{ inputs.poetry_version_bump }}
                  echo python-version = ${{ inputs.python-version }}
                  echo poetry_build_params = ${{ inputs.poetry_build_params }}
                  echo pytest_run = ${{ inputs.pytest_run }}
                  echo pytest_params = ${{ inputs.pytest_params }}
                  echo PYPI_API_TOKEN = ${{ secrets.PYPI_API_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ inputs.python-version }}
                  cache: 'pip'
                  check-latest: true

            - name: Poerty Publisher
              uses: ./actions/python-publisher
              with:
                app_version: ${{ inputs.app_version }}
                python-version: ${{ inputs.python-version }}
                poetry_version_bump: ${{ inputs.poetry_version_bump }}
                poetry_build_params: ${{ inputs.poetry_build_params }}
                pytest_run: ${{ inputs.pytest_run }}
                pytest_params: ${{ inputs.pytest_params }}
              env:
                PYPI_TOKEN: ${{ secrets.PYPI_TEST_API_TOKEN }}

